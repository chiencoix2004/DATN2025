name: Laravel CI/CD Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, pdo, sqlite, bcmath
        ini-values: post_max_size=256M, max_execution_time=300
        coverage: none

    - name: Install Composer Dependencies
      run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

    - name: Install Doctrine DBAL
      run: composer require doctrine/dbal --no-suggest --prefer-dist --no-progress

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Set Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Prepare SQLite Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Run Migrations and Seed Database
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: |
        php artisan migrate --force
        php artisan db:seed --force

    - name: Run Tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  laravel-deploy:
    runs-on: ubuntu-latest
    needs: [laravel-tests]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
    - name: update packge
      run: composer update
    - name: Install Composer Dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Run Migrations on Production Database
      env:
        DB_CONNECTION: mysql
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: php artisan migrate --force

    - name: Deploy Application
      run: echo "Deploy completed successfully"
